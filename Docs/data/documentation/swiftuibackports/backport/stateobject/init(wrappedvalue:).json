{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"thunk"},{"kind":"text","text":": "},{"text":"@autoclosure","kind":"attribute"},{"kind":"text","text":" "},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"thunk","content":[{"type":"paragraph","inlineContent":[{"text":"An initial value for the state object.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You donâ€™t call this initializer directly. Instead, declare a property"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"@Backport.StateObject"},{"type":"text","text":" attribute in a "},{"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/View","type":"reference","isActive":true},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"SwiftUI\/App"},{"type":"text","text":", or "},{"type":"codeVoice","code":"SwiftUI\/Scene"},{"type":"text","text":", and provide an initial value:"}]},{"syntax":null,"code":["struct MyView: View {","    @Backport.StateObject var model = DataModel()","","    \/\/ ...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"SwiftUI creates only one instance of the state object for each","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container instance that you declare. In the code above, SwiftUI"},{"type":"text","text":" "},{"type":"text","text":"creates "},{"type":"codeVoice","code":"model"},{"text":" only the first time it initializes a particular instance","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"MyView","type":"codeVoice"},{"type":"text","text":". On the other hand, each different instance of "},{"code":"MyView","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"receives a distinct copy of the data model."}]}]}],"abstract":[{"type":"text","text":"Creates a new state object with an initial wrapped value."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/init(wrappedValue:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject"]]},"sections":[],"metadata":{"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"SwiftUIBackports"}],"externalID":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE05StateG0V12wrappedValueAHyx_GxyXA_tcfc","title":"init(wrappedValue:)","role":"symbol","platforms":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp","text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/stateobject\/init(wrappedvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/init(wrappedValue:)":{"kind":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/init(wrappedValue:)","title":"init(wrappedValue:)","url":"\/documentation\/swiftuibackports\/backport\/stateobject\/init(wrappedvalue:)","role":"symbol","abstract":[{"type":"text","text":"Creates a new state object with an initial wrapped value."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject":{"navigatorTitle":[{"kind":"identifier","text":"StateObject"}],"kind":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject","title":"Backport.StateObject","url":"\/documentation\/swiftuibackports\/backport\/stateobject","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that instantiates an observable object."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateObject"}],"deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"abstract":[{"text":"Introducing a collection of SwiftUI backports to make your iOS development easier.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/swiftuibackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","title":"SwiftUIBackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"title":"Backport","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"text":"including types, functions, properties, property wrappers and more.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/SwiftUI/View":{"url":"\/documentation\/swiftuibackports\/swiftui\/view","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/View","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","title":"View","navigatorTitle":[{"kind":"identifier","text":"View"}],"type":"topic"}}}