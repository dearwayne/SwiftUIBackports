{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"background"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"kind":"text","text":" = .center, "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"kind":"text","text":" "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"content","kind":"internalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"alignment","content":[{"type":"paragraph","inlineContent":[{"text":"The alignment that the modifier uses to position the","type":"text"},{"type":"text","text":" "},{"text":"implicit ","type":"text"},{"type":"codeVoice","code":"ZStack"},{"text":" that groups the background views. The default","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is "},{"type":"codeVoice","code":"Alignment\/center"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewBuilder"},{"text":" that you use to declare the views to draw","type":"text"},{"type":"text","text":" "},{"type":"text","text":"behind this view, stacked in a cascading order from bottom to top."},{"type":"text","text":" "},{"text":"The last view that you list appears at the front of the stack.","type":"text"}],"type":"paragraph"}],"name":"content"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A view that uses the specified content as a background.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Use this modifier to place one or more views behind another view.","type":"text"},{"type":"text","text":" "},{"text":"For example, you can place a collection of stars beind a ","type":"text"},{"code":"Text","type":"codeVoice"},{"type":"text","text":" view:"}],"type":"paragraph"},{"syntax":null,"code":["Text(\"ABCDEF\")","    .background(alignment: .leading) { Star(color: .red) }","    .background(alignment: .center) { Star(color: .green) }","    .background(alignment: .trailing) { Star(color: .blue) }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The example above assumes that you’ve defined a ","type":"text"},{"code":"Star","type":"codeVoice"},{"type":"text","text":" view with a"},{"type":"text","text":" "},{"type":"text","text":"parameterized color:"}]},{"code":["struct Star: View {","    var color: Color","","    var body: some View {","        Image(systemName: \"star.fill\")","            .foregroundStyle(color)","    }","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"By setting different "},{"code":"alignment","type":"codeVoice"},{"type":"text","text":" values for each modifier, you make the"},{"text":" ","type":"text"},{"type":"text","text":"stars appear in different places behind the text:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"text":"If you specify more than one view in the ","type":"text"},{"type":"codeVoice","code":"content"},{"type":"text","text":" closure, the modifier"},{"type":"text","text":" "},{"text":"collects all of the views in the closure into an implicit ","type":"text"},{"type":"codeVoice","code":"ZStack"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"taking them in order from back to front. For example, you can layer a","type":"text"},{"text":" ","type":"text"},{"text":"vertical bar behind a circle, with both of those behind a horizontal","type":"text"},{"text":" ","type":"text"},{"text":"bar:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["Color.blue","    .frame(width: 200, height: 10) \/\/ Creates a horizontal bar.","    .background {","        Color.green","            .frame(width: 10, height: 100) \/\/ Creates a vertical bar.","        Circle()","            .frame(width: 50, height: 50)","    }"]},{"type":"paragraph","inlineContent":[{"text":"Both the background modifier and the implicit ","type":"text"},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":" composed from"},{"text":" ","type":"text"},{"text":"the background content — the circle and the vertical bar — use a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"default "},{"type":"codeVoice","code":"Alignment\/center"},{"type":"text","text":" alignment. The vertical bar appears"},{"text":" ","type":"text"},{"type":"text","text":"centered behind the circle, and both appear as a composite view centered"},{"type":"text","text":" "},{"type":"text","text":"behind the horizontal bar:"}]},{"inlineContent":[],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you specify an alignment for the background, it applies to the"},{"type":"text","text":" "},{"type":"text","text":"implicit stack rather than to the individual views in the closure. You"},{"type":"text","text":" "},{"text":"can see this if you add the ","type":"text"},{"type":"codeVoice","code":"Alignment\/leading"},{"text":" alignment:","type":"text"}]},{"code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        Color.green","            .frame(width: 10, height: 100)","        Circle()","            .frame(width: 50, height: 50)","    }"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The vertical bar and the circle move as a unit to align the stack","type":"text"},{"text":" ","type":"text"},{"text":"with the leading edge of the horizontal bar, while the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"vertical bar remains centered on the circle:"}],"type":"paragraph"},{"inlineContent":[],"type":"paragraph"},{"inlineContent":[{"text":"To control the placement of individual items inside the ","type":"text"},{"code":"content","type":"codeVoice"},{"text":" ","type":"text"},{"text":"closure, either use a different background modifier for each item, as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the earlier example of stars under text demonstrates, or add an explicit"},{"type":"text","text":" "},{"type":"codeVoice","code":"ZStack"},{"text":" inside the content closure with its own alignment:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        ZStack(alignment: .leading) {","            Color.green","                .frame(width: 10, height: 100)","            Circle()","                .frame(width: 50, height: 50)","        }","    }"],"syntax":null},{"inlineContent":[{"type":"text","text":"The stack alignment ensures that the circle’s leading edge aligns with"},{"text":" ","type":"text"},{"type":"text","text":"the vertical bar’s, while the background modifier aligns the composite"},{"text":" ","type":"text"},{"type":"text","text":"view with the horizontal bar:"}],"type":"paragraph"},{"inlineContent":[],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can achieve layering without a background modifier by putting both"},{"type":"text","text":" "},{"type":"text","text":"the modified view and the background content into a "},{"code":"ZStack","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"produces a simpler view hierarchy, but it changes the layout priority"},{"text":" ","type":"text"},{"text":"that SwiftUI applies to the views. Use the background modifier when you","type":"text"},{"text":" ","type":"text"},{"text":"want the modified view to dominate the layout.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you want to specify a "},{"type":"codeVoice","code":"ShapeStyle"},{"type":"text","text":" like a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"HierarchicalShapeStyle"},{"type":"text","text":" or a "},{"code":"Material","type":"codeVoice"},{"text":" as the background, use","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:ignoresSafeAreaEdges:)"},{"text":" instead.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"To specify a "},{"code":"Shape","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"InsettableShape"},{"type":"text","text":", use"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:in:fillStyle:)-89n7j"},{"text":" or","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:in:fillStyle:)-20tq5"},{"text":", respectively.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"relatedModules":["SwiftBackports"],"name":"SwiftUIBackports"}],"role":"symbol","title":"background(alignment:_:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftBackports","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"background","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"kind":"text","text":", () -> "},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp","text":"Content","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/background(alignment:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"abstract":[{"text":"Layers the views that you specify behind this view.","type":"text"}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"title":"Backport","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"text":"including types, functions, properties, property wrappers and more.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"abstract":[{"text":"Introducing a collection of SwiftUI backports to make your iOS development easier.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/swiftuibackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","title":"SwiftUIBackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/background(alignment:_:)":{"role":"symbol","title":"background(alignment:_:)","kind":"symbol","type":"topic","abstract":[{"text":"Layers the views that you specify behind this view.","type":"text"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}]},"url":"\/documentation\/swiftuibackports\/backport\/background(alignment:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"background"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Content"},{"text":">(","kind":"text"},{"text":"alignment","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment"},{"text":", () -> ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp","kind":"typeIdentifier","text":"Content"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}}}