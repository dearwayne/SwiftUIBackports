{"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"background","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"alignment","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment"},{"text":", () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"extendedModule":"SwiftBackports","externalID":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lF","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}]},"role":"symbol","title":"background(alignment:_:)","modules":[{"name":"SwiftUIBackports","relatedModules":["SwiftBackports"]}]},"abstract":[{"type":"text","text":"Layers the views that you specify behind this view."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"background","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment"},{"kind":"text","text":" = .center, "},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"content","kind":"internalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp","text":"Content"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The alignment that the modifier uses to position the"},{"type":"text","text":" "},{"type":"text","text":"implicit "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":" that groups the background views. The default"},{"text":" ","type":"text"},{"type":"text","text":"is "},{"type":"codeVoice","code":"Alignment\/center"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"alignment"},{"content":[{"inlineContent":[{"type":"text","text":"A "},{"code":"ViewBuilder","type":"codeVoice"},{"type":"text","text":" that you use to declare the views to draw"},{"text":" ","type":"text"},{"text":"behind this view, stacked in a cascading order from bottom to top.","type":"text"},{"type":"text","text":" "},{"text":"The last view that you list appears at the front of the stack.","type":"text"}],"type":"paragraph"}],"name":"content"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A view that uses the specified content as a background."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this modifier to place one or more views behind another view."},{"type":"text","text":" "},{"text":"For example, you can place a collection of stars beind a ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":" view:","type":"text"}]},{"code":["Text(\"ABCDEF\")","    .background(alignment: .leading) { Star(color: .red) }","    .background(alignment: .center) { Star(color: .green) }","    .background(alignment: .trailing) { Star(color: .blue) }"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The example above assumes that you’ve defined a ","type":"text"},{"code":"Star","type":"codeVoice"},{"text":" view with a","type":"text"},{"type":"text","text":" "},{"text":"parameterized color:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["struct Star: View {","    var color: Color","","    var body: some View {","        Image(systemName: \"star.fill\")","            .foregroundStyle(color)","    }","}"]},{"inlineContent":[{"type":"text","text":"By setting different "},{"code":"alignment","type":"codeVoice"},{"text":" values for each modifier, you make the","type":"text"},{"type":"text","text":" "},{"text":"stars appear in different places behind the text:","type":"text"}],"type":"paragraph"},{"inlineContent":[],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you specify more than one view in the "},{"code":"content","type":"codeVoice"},{"text":" closure, the modifier","type":"text"},{"type":"text","text":" "},{"text":"collects all of the views in the closure into an implicit ","type":"text"},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"taking them in order from back to front. For example, you can layer a"},{"type":"text","text":" "},{"type":"text","text":"vertical bar behind a circle, with both of those behind a horizontal"},{"text":" ","type":"text"},{"text":"bar:","type":"text"}]},{"type":"codeListing","code":["Color.blue","    .frame(width: 200, height: 10) \/\/ Creates a horizontal bar.","    .background {","        Color.green","            .frame(width: 10, height: 100) \/\/ Creates a vertical bar.","        Circle()","            .frame(width: 50, height: 50)","    }"],"syntax":null},{"inlineContent":[{"type":"text","text":"Both the background modifier and the implicit "},{"code":"ZStack","type":"codeVoice"},{"type":"text","text":" composed from"},{"text":" ","type":"text"},{"type":"text","text":"the background content — the circle and the vertical bar — use a"},{"text":" ","type":"text"},{"text":"default ","type":"text"},{"type":"codeVoice","code":"Alignment\/center"},{"text":" alignment. The vertical bar appears","type":"text"},{"type":"text","text":" "},{"text":"centered behind the circle, and both appear as a composite view centered","type":"text"},{"type":"text","text":" "},{"type":"text","text":"behind the horizontal bar:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[]},{"inlineContent":[{"type":"text","text":"If you specify an alignment for the background, it applies to the"},{"text":" ","type":"text"},{"text":"implicit stack rather than to the individual views in the closure. You","type":"text"},{"type":"text","text":" "},{"text":"can see this if you add the ","type":"text"},{"type":"codeVoice","code":"Alignment\/leading"},{"text":" alignment:","type":"text"}],"type":"paragraph"},{"code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        Color.green","            .frame(width: 10, height: 100)","        Circle()","            .frame(width: 50, height: 50)","    }"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The vertical bar and the circle move as a unit to align the stack","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the leading edge of the horizontal bar, while the"},{"text":" ","type":"text"},{"type":"text","text":"vertical bar remains centered on the circle:"}]},{"type":"paragraph","inlineContent":[]},{"inlineContent":[{"type":"text","text":"To control the placement of individual items inside the "},{"type":"codeVoice","code":"content"},{"type":"text","text":" "},{"type":"text","text":"closure, either use a different background modifier for each item, as"},{"type":"text","text":" "},{"type":"text","text":"the earlier example of stars under text demonstrates, or add an explicit"},{"text":" ","type":"text"},{"code":"ZStack","type":"codeVoice"},{"text":" inside the content closure with its own alignment:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        ZStack(alignment: .leading) {","            Color.green","                .frame(width: 10, height: 100)","            Circle()","                .frame(width: 50, height: 50)","        }","    }"]},{"inlineContent":[{"text":"The stack alignment ensures that the circle’s leading edge aligns with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the vertical bar’s, while the background modifier aligns the composite"},{"text":" ","type":"text"},{"type":"text","text":"view with the horizontal bar:"}],"type":"paragraph"},{"inlineContent":[],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can achieve layering without a background modifier by putting both"},{"text":" ","type":"text"},{"type":"text","text":"the modified view and the background content into a "},{"code":"ZStack","type":"codeVoice"},{"type":"text","text":". This"},{"text":" ","type":"text"},{"text":"produces a simpler view hierarchy, but it changes the layout priority","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that SwiftUI applies to the views. Use the background modifier when you"},{"text":" ","type":"text"},{"type":"text","text":"want the modified view to dominate the layout."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If you want to specify a ","type":"text"},{"type":"codeVoice","code":"ShapeStyle"},{"text":" like a","type":"text"},{"type":"text","text":" "},{"code":"HierarchicalShapeStyle","type":"codeVoice"},{"type":"text","text":" or a "},{"code":"Material","type":"codeVoice"},{"type":"text","text":" as the background, use"},{"text":" ","type":"text"},{"code":"View\/background(_:ignoresSafeAreaEdges:)","type":"codeVoice"},{"type":"text","text":" instead."},{"type":"text","text":" "},{"text":"To specify a ","type":"text"},{"type":"codeVoice","code":"Shape"},{"type":"text","text":" or "},{"code":"InsettableShape","type":"codeVoice"},{"type":"text","text":", use"},{"text":" ","type":"text"},{"code":"View\/background(_:in:fillStyle:)-89n7j","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"View\/background(_:in:fillStyle:)-20tq5"},{"text":", respectively.","type":"text"}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/background(alignment:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/background(alignment:_:)":{"title":"background(alignment:_:)","abstract":[{"type":"text","text":"Layers the views that you specify behind this view."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"background"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"alignment","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Alignment","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AlignmentV"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE10background9alignment_QrAE9AlignmentV_qd__yXEtAeFRd__lFQO7Contentqd__mfp"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/swiftuibackports\/backport\/background(alignment:_:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"}}}