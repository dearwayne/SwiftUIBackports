{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftuibackports\/backport\/interactivedismissdisabled(_:)"]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/interactiveDismissDisabled(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Conditionally prevents interactive dismissal of a popover or a sheet."}],"sections":[],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"interactiveDismissDisabled","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"extendedModule":"SwiftBackports","role":"symbol","externalID":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE26interactiveDismissDisabledyQrSbF","platforms":[],"modules":[{"name":"SwiftUIBackports","relatedModules":["SwiftBackports"]}],"title":"interactiveDismissDisabled(_:)"},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"interactiveDismissDisabled","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"isDisabled","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" = true) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value that indicates whether to"},{"type":"text","text":" "},{"text":"prevent nonprogrammatic dismissal of the containing view hierarchy","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when presented in a sheet or popover."}]}],"name":"isDisabled"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Users can dismiss certain kinds of presentations using built-in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"gestures. In particular, a user can dismiss a sheet by dragging it down,"},{"type":"text","text":" "},{"type":"text","text":"or a popover by clicking or tapping outside of the presented view. Use"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"interactiveDismissDisabled(_:)"},{"type":"text","text":" modifier to conditionally prevent"},{"type":"text","text":" "},{"text":"this kind of dismissal. You typically do this to prevent the user from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dismissing a presentation before providing needed data or completing"},{"type":"text","text":" "},{"text":"a required action.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For instance, suppose you have a view that displays a licensing"},{"type":"text","text":" "},{"type":"text","text":"agreement that the user must acknowledge before continuing:"}],"type":"paragraph"},{"code":["struct TermsOfService: View {","    @Binding var areTermsAccepted: Bool","    @Environment(\\.backportDismiss) private var dismiss","","    var body: some View {","        Form {","            Text(\"License Agreement\")","                .font(.title)","            Text(\"Terms and conditions go here.\")","            Button(\"Accept\") {","                areTermsAccepted = true","                dismiss()","            }","        }","    }","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"If you present this view in a sheet, the user can dismiss it by either"},{"type":"text","text":" "},{"type":"text","text":"tapping the button — which calls "},{"type":"codeVoice","code":"EnvironmentValues\/backportDismiss"},{"text":" ","type":"text"},{"text":"from its ","type":"text"},{"type":"codeVoice","code":"action"},{"type":"text","text":" closure — or by dragging the sheet down. To"},{"text":" ","type":"text"},{"text":"ensure that the user accepts the terms by tapping the button,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"disable interactive dismissal, conditioned on the "},{"code":"areTermsAccepted","type":"codeVoice"},{"type":"text","text":" "},{"text":"property:","type":"text"}],"type":"paragraph"},{"code":["struct ContentView: View {","    @State private var isSheetPresented = false","    @State private var areTermsAccepted = false","","    var body: some View {","        Button(\"Use Service\") {","            isSheetPresented = true","        }","        .sheet(isPresented: $isSheetPresented) {","            TermsOfService()","                .backport.interactiveDismissDisabled(!areTermsAccepted)","        }","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can apply the modifier to any view in the sheet’s view hierarchy,"},{"text":" ","type":"text"},{"text":"including to the sheet’s top level view, as the example demonstrates,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or to any child view, like the "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" or the Accept "},{"type":"codeVoice","code":"Button"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The modifier has no effect on programmatic dismissal, which you can","type":"text"},{"text":" ","type":"text"},{"text":"invoke by updating the ","type":"text"},{"type":"codeVoice","code":"Binding"},{"text":" that controls the presentation, or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by calling the environment’s "},{"type":"codeVoice","code":"EnvironmentValues\/backportDismiss"},{"type":"text","text":" action."}]},{"type":"aside","content":[{"inlineContent":[{"text":"This modifier currently has no effect on macOS, tvOS or watchOS.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}]}],"kind":"symbol","references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"abstract":[{"text":"Introducing a collection of SwiftUI backports to make your iOS development easier.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/swiftuibackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","title":"SwiftUIBackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"title":"Backport","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"text":"including types, functions, properties, property wrappers and more.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/interactiveDismissDisabled(_:)":{"url":"\/documentation\/swiftuibackports\/backport\/interactivedismissdisabled(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interactiveDismissDisabled"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/interactiveDismissDisabled(_:)","abstract":[{"text":"Conditionally prevents interactive dismissal of a popover or a sheet.","type":"text"}],"deprecated":true,"type":"topic","title":"interactiveDismissDisabled(_:)"}}}