{"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","externalID":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE26interactiveDismissDisabled_9onAttemptQrSb_yyctF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interactiveDismissDisabled"},{"text":"(","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onAttempt","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method","extendedModule":"SwiftBackports","modules":[{"relatedModules":["SwiftBackports"],"name":"SwiftUIBackports"}],"title":"interactiveDismissDisabled(_:onAttempt:)","symbolKind":"method"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Conditionally prevents interactive dismissal of a popover or a sheet. In addition, provides fine-grained control over the dismissal","type":"text"}],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/interactivedismissdisabled(_:onattempt:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"interactiveDismissDisabled","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isDisabled","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"onAttempt"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A Boolean value that indicates whether to"},{"type":"text","text":" "},{"text":"prevent nonprogrammatic dismissal of the containing view hierarchy","type":"text"},{"type":"text","text":" "},{"text":"when presented in a sheet or popover.","type":"text"}],"type":"paragraph"}],"name":"isDisabled"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that will be called when an interactive dismiss attempt occurs.","type":"text"},{"type":"text","text":" "},{"text":"You can use this as an opportunity to present an confirmation or prompt to the user.","type":"text"}]}],"name":"onAttempt"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Users can dismiss certain kinds of presentations using built-in"},{"text":" ","type":"text"},{"type":"text","text":"gestures. In particular, a user can dismiss a sheet by dragging it down,"},{"type":"text","text":" "},{"type":"text","text":"or a popover by clicking or tapping outside of the presented view. Use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"interactiveDismissDisabled(_:)"},{"text":" modifier to conditionally prevent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this kind of dismissal. You typically do this to prevent the user from"},{"text":" ","type":"text"},{"text":"dismissing a presentation before providing needed data or completing","type":"text"},{"type":"text","text":" "},{"text":"a required action.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, suppose you have a view that displays a licensing"},{"type":"text","text":" "},{"text":"agreement that the user must acknowledge before continuing:","type":"text"}]},{"syntax":null,"code":["struct TermsOfService: View {","    @Binding var areTermsAccepted: Bool","    @Environment(\\.backportDismiss) private var dismiss","","    var body: some View {","        Form {","            Text(\"License Agreement\")","                .font(.title)","            Text(\"Terms and conditions go here.\")","            Button(\"Accept\") {","                areTermsAccepted = true","                dismiss()","            }","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you present this view in a sheet, the user can dismiss it by either"},{"type":"text","text":" "},{"text":"tapping the button — which calls ","type":"text"},{"type":"codeVoice","code":"EnvironmentValues\/backportDismiss"},{"text":" ","type":"text"},{"type":"text","text":"from its "},{"code":"action","type":"codeVoice"},{"text":" closure — or by dragging the sheet down. To","type":"text"},{"type":"text","text":" "},{"text":"ensure that the user accepts the terms by tapping the button,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"disable interactive dismissal, conditioned on the "},{"type":"codeVoice","code":"areTermsAccepted"},{"type":"text","text":" "},{"type":"text","text":"property:"}],"type":"paragraph"},{"syntax":null,"code":["struct ContentView: View {","    @State private var isSheetPresented = false","    @State private var areTermsAccepted = false","","    var body: some View {","        Button(\"Use Service\") {","            isSheetPresented = true","        }","        .sheet(isPresented: $isSheetPresented) {","            TermsOfService()","                .backport.interactiveDismissDisabled(!areTermsAccepted)","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"You can apply the modifier to any view in the sheet’s view hierarchy,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including to the sheet’s top level view, as the example demonstrates,"},{"type":"text","text":" "},{"type":"text","text":"or to any child view, like the "},{"type":"codeVoice","code":"Form"},{"text":" or the Accept ","type":"text"},{"code":"Button","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The modifier has no effect on programmatic dismissal, which you can","type":"text"},{"text":" ","type":"text"},{"text":"invoke by updating the ","type":"text"},{"type":"codeVoice","code":"Binding"},{"text":" that controls the presentation, or","type":"text"},{"type":"text","text":" "},{"text":"by calling the environment’s ","type":"text"},{"code":"EnvironmentValues\/backportDismiss","type":"codeVoice"},{"text":" action.","type":"text"}]},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This modifier currently has no effect on macOS, tvOS or watchOS."}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/interactiveDismissDisabled(_:onAttempt:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/interactiveDismissDisabled(_:onAttempt:)":{"title":"interactiveDismissDisabled(_:onAttempt:)","abstract":[{"type":"text","text":"Conditionally prevents interactive dismissal of a popover or a sheet. In addition, provides fine-grained control over the dismissal"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/interactiveDismissDisabled(_:onAttempt:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interactiveDismissDisabled","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"onAttempt","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/swiftuibackports\/backport\/interactivedismissdisabled(_:onattempt:)"}}}