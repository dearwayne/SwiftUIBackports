{"sections":[],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"total"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"V","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp"},{"text":")","kind":"text"}],"externalID":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc","modules":[{"name":"SwiftUIBackports"}],"extendedModule":"SwiftUIBackports","platforms":[],"title":"init(value:total:)","roleHeading":"Initializer","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":", "},{"code":"Label","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"CurrentValueLabel","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"init"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"text":">(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp","text":"V","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"total"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp","text":"V","kind":"typeIdentifier"},{"kind":"text","text":" = 1.0) "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Label","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9EmptyViewV","kind":"typeIdentifier","text":"EmptyView"},{"text":", ","kind":"text"},{"text":"CurrentValueLabel","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV","text":"EmptyView"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SB","kind":"typeIdentifier","text":"BinaryFloatingPoint"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The completed amount of the task to this point, in a range"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"0.0"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"total"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"text":" if the progress is indeterminate.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The full amount representing the complete scope of the","type":"text"},{"text":" ","type":"text"},{"text":"task, meaning the task is complete if ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" equals "},{"type":"codeVoice","code":"total"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"text":"default value is ","type":"text"},{"type":"codeVoice","code":"1.0"},{"type":"text","text":"."}]}],"name":"total"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"If the value is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", but outside the range of ","type":"text"},{"code":"0.0","type":"codeVoice"},{"text":" through","type":"text"},{"type":"text","text":" "},{"code":"total","type":"codeVoice"},{"text":", the progress view pins the value to those limits, rounding to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the nearest possible bound. A value of "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" represents indeterminate"},{"text":" ","type":"text"},{"type":"text","text":"progress, in which case the progress view ignores "},{"code":"total","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView\/init(value:total:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/progressview\/init(value:total:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView"]]},"abstract":[{"text":"Creates a progress view for showing determinate progress.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/ProgressView/init(value:total:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp","text":"V"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"total"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE12ProgressViewV5value5totalAFyyp_0A2UI05EmptyF0VAKGqd0__Sg_qd0__tcAKRsd__AKRsd_0_SBRd0__lufc1VL_qd0__mfp","kind":"typeIdentifier","text":"V"},{"text":")","kind":"text"}],"deprecated":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView\/init(value:total:)","role":"symbol","abstract":[{"type":"text","text":"Creates a progress view for showing determinate progress."}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"text":", ","type":"text"},{"code":"Label","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CurrentValueLabel"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/swiftuibackports\/backport\/progressview\/init(value:total:)","type":"topic","title":"init(value:total:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/ProgressView":{"deprecated":true,"kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports\/backport\/progressview","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}]},"role":"symbol","title":"Backport.ProgressView","navigatorTitle":[{"text":"ProgressView","kind":"identifier"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProgressView"}]}}}