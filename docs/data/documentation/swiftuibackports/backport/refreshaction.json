{"abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RefreshAction","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike the official implementation, this backport does not affect any"},{"type":"text","text":" "},{"text":"view’s like ","type":"text"},{"type":"codeVoice","code":"List"},{"text":" to provide automatic pull-to-refresh behaviour.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this to offer refresh capability in your custom views."},{"type":"text","text":" "},{"type":"text","text":"Read the "},{"code":"EnvironmentValues\/refresh","type":"codeVoice"},{"text":" environment value to get the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RefreshAction"},{"type":"text","text":" instance for a given "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":". If you find"},{"text":" ","type":"text"},{"type":"text","text":"a non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" value, change your view’s appearance or behavior to offer"},{"type":"text","text":" "},{"type":"text","text":"the refresh to the user, and call the instance to conduct the"},{"type":"text","text":" "},{"type":"text","text":"refresh. You can call the refresh instance directly because it defines"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()","type":"reference"},{"text":" method that Swift calls","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when you call the instance:"}]},{"syntax":null,"type":"codeListing","code":["struct RefreshableView: View {","    @Environment(\\.refresh) private var refresh","","    var body: some View {","        Button(\"Refresh\") {","            Task {","                await refresh?()","            }","        }","        .disabled(refresh == nil)","    }","}"]},{"inlineContent":[{"type":"text","text":"Be sure to call the handler asynchronously by preceding it"},{"text":" ","type":"text"},{"text":"with ","type":"text"},{"code":"await","type":"codeVoice"},{"text":". Because the call is asynchronous, you can use","type":"text"},{"text":" ","type":"text"},{"text":"its lifetime to indicate progress to the user. For example,","type":"text"},{"text":" ","type":"text"},{"text":"you might reveal an indeterminate ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView","isActive":true},{"text":" before","type":"text"},{"type":"text","text":" "},{"text":"calling the handler, and hide it when the handler completes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your code isn’t already in an asynchronous context, create a"},{"text":" ","type":"text"},{"type":"text","text":"doc:\/\/com.apple.documentation\/documentation\/Swift\/Task"},{"text":" for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method to run in. If you do this, consider adding a way for the"},{"text":" ","type":"text"},{"type":"text","text":"user to cancel the task. For more information, see"},{"text":" ","type":"text"},{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"in "},{"type":"emphasis","inlineContent":[{"text":"The Swift Programming Language","type":"text"}]},{"type":"text","text":"."}]}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/refreshaction"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"struct","platforms":[],"roleHeading":"Structure","externalID":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE13RefreshActionV","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"code":"Any","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"navigatorTitle":[{"text":"RefreshAction","kind":"identifier"}],"modules":[{"name":"SwiftUIBackports","relatedModules":["SwiftBackports"]}],"title":"Backport.RefreshAction","extendedModule":"SwiftBackports","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RefreshAction","kind":"identifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/ProgressView":{"deprecated":true,"kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports\/backport\/progressview","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"text":".","type":"text"}]},"role":"symbol","title":"Backport.ProgressView","navigatorTitle":[{"text":"ProgressView","kind":"identifier"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProgressView"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/RefreshAction/callAsFunction()":{"deprecated":true,"type":"topic","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()","abstract":[],"title":"callAsFunction()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/swiftuibackports\/backport\/refreshaction\/callasfunction()","kind":"symbol"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"},"https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html":{"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","title":"Concurrency","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","titleInlineContent":[{"text":"Concurrency","type":"text"}],"type":"link"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/RefreshAction":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"deprecated":true,"title":"Backport.RefreshAction","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"url":"\/documentation\/swiftuibackports\/backport\/refreshaction","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RefreshAction","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RefreshAction"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","role":"symbol"}}}