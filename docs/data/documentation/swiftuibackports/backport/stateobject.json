{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SwiftUIBackports\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A property wrapper type that instantiates an observable object.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateObject","kind":"identifier"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Create a state object in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/View"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SwiftUI\/App"},{"type":"text","text":", or"},{"text":" ","type":"text"},{"code":"SwiftUI\/Scene","type":"codeVoice"},{"type":"text","text":" by applying the "},{"code":"@Backport.StateObject","type":"codeVoice"},{"type":"text","text":" attribute to a property"},{"text":" ","type":"text"},{"type":"text","text":"declaration and providing an initial value that conforms to the"},{"type":"text","text":" "},{"type":"text","text":"doc:\/\/com.apple.documentation\/documentation\/Combine\/ObservableObject"},{"text":" ","type":"text"},{"type":"text","text":"protocol:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["@Backport.StateObject var model = DataModel()"]},{"type":"paragraph","inlineContent":[{"text":"SwiftUI creates a new instance of the object only once for each instance of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the structure that declares the object. When published properties of the"},{"text":" ","type":"text"},{"type":"text","text":"observable object change, SwiftUI updates the parts of any view that depend"},{"type":"text","text":" "},{"type":"text","text":"on those properties:"}]},{"code":["Text(model.title) \/\/ Updates the view any time `title` changes."],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"You can pass the state object into a property that has the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SwiftUI\/ObservedObject"},{"text":" attribute. You can alternatively add the object","type":"text"},{"type":"text","text":" "},{"text":"to the environment of a view hierarchy by applying the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"SwiftUI\/View\/environmentObject(_:)"},{"text":" modifier:","type":"text"}],"type":"paragraph"},{"code":["ContentView()","    .environmentObject(model)"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If you create an environment object as shown in the code above, you can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"read the object inside "},{"code":"ContentView","type":"codeVoice"},{"type":"text","text":" or any of its descendants"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"code":"SwiftUI\/EnvironmentObject","type":"codeVoice"},{"text":" attribute:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["@EnvironmentObject var model: DataModel"]},{"inlineContent":[{"type":"text","text":"Get a "},{"code":"SwiftUI\/Binding","type":"codeVoice"},{"type":"text","text":" to one of the state object’s properties using the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"$"},{"type":"text","text":" operator. Use a binding when you want to create a two-way connection to"},{"text":" ","type":"text"},{"text":"one of the object’s properties. For example, you can let a","type":"text"},{"text":" ","type":"text"},{"code":"SwiftUI\/Toggle","type":"codeVoice"},{"text":" control a Boolean value called ","type":"text"},{"type":"codeVoice","code":"isEnabled"},{"type":"text","text":" stored in the"},{"type":"text","text":" "},{"type":"text","text":"model:"}],"type":"paragraph"},{"code":["Toggle(\"Enabled\", isOn: $model.isEnabled)"],"syntax":null,"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/stateobject"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/projectedValue","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/update()-4n60n"]},{"identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/DynamicProperty-Implementations"],"generated":true,"title":"Default Implementations"}],"sections":[],"metadata":{"externalID":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE05StateG0V","extendedModule":"SwiftBackports","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"title":"Backport.StateObject","navigatorTitle":[{"text":"StateObject","kind":"identifier"}],"role":"symbol","platforms":[],"roleHeading":"Structure","modules":[{"name":"SwiftUIBackports","relatedModules":["SwiftBackports"]}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateObject","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject"},"references":{"doc://SwiftUIBackports/7SwiftUI15DynamicPropertyP":{"identifier":"doc:\/\/SwiftUIBackports\/7SwiftUI15DynamicPropertyP","title":"SwiftUI.DynamicProperty","type":"unresolvable"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/projectedValue":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14ObservedObjectV","text":"ObservedObject"},{"kind":"text","text":"<"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp"},{"text":">.","kind":"text"},{"text":"Wrapper","preciseIdentifier":"s:7SwiftUI14ObservedObjectV7WrapperV","kind":"typeIdentifier"}],"abstract":[{"text":"A projection of the state object that creates bindings to its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/projectedValue","kind":"symbol","title":"projectedValue","type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport\/stateobject\/projectedvalue","deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"title":"Backport","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"text":"including types, functions, properties, property wrappers and more.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject":{"navigatorTitle":[{"kind":"identifier","text":"StateObject"}],"kind":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject","title":"Backport.StateObject","url":"\/documentation\/swiftuibackports\/backport\/stateobject","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that instantiates an observable object."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateObject"}],"deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/wrappedValue":{"title":"wrappedValue","abstract":[{"type":"text","text":"The underlying value referenced by the state object."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp","text":"Wrapped","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/stateobject\/wrappedvalue","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue","type":"topic"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"abstract":[{"text":"Introducing a collection of SwiftUI backports to make your iOS development easier.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/swiftuibackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","title":"SwiftUIBackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/update()-4n60n":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"update"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/update()-4n60n","deprecated":true,"type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/swiftuibackports\/backport\/stateobject\/update()-4n60n","title":"update()"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/DynamicProperty-Implementations":{"title":"DynamicProperty Implementations","abstract":[],"url":"\/documentation\/swiftuibackports\/backport\/stateobject\/dynamicproperty-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/DynamicProperty-Implementations"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/init(wrappedValue:)":{"kind":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/init(wrappedValue:)","title":"init(wrappedValue:)","url":"\/documentation\/swiftuibackports\/backport\/stateobject\/init(wrappedvalue:)","role":"symbol","abstract":[{"type":"text","text":"Creates a new state object with an initial wrapped value."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports/SwiftUI/View":{"url":"\/documentation\/swiftuibackports\/swiftui\/view","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/View","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","title":"View","navigatorTitle":[{"kind":"identifier","text":"View"}],"type":"topic"}}}