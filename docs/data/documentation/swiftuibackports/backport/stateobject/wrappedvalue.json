{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The wrapped value property provides primary access to the value’s data."},{"text":" ","type":"text"},{"type":"text","text":"However, you don’t access "},{"code":"wrappedValue","type":"codeVoice"},{"text":" directly. Instead, use the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"property variable created with the "},{"type":"codeVoice","code":"@Backport.StateObject"},{"type":"text","text":" attribute:"}]},{"syntax":null,"type":"codeListing","code":["@Backport.StateObject var contact = Contact()","","var body: some View {","    Text(contact.name) \/\/ Accesses contact's wrapped value.","}"]},{"type":"paragraph","inlineContent":[{"text":"When you change a property of the wrapped value, you can access the new","type":"text"},{"type":"text","text":" "},{"text":"value immediately. However, SwiftUI updates views displaying the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"asynchronously, so the user interface might not update immediately."}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject"]]},"metadata":{"title":"wrappedValue","role":"symbol","symbolKind":"property","externalID":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE05StateG0V12wrappedValuexvp","modules":[{"name":"SwiftUIBackports"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp"}],"platforms":[],"roleHeading":"Instance Property"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The underlying value referenced by the state object."}],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/stateobject\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"abstract":[{"text":"Introducing a collection of SwiftUI backports to make your iOS development easier.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/swiftuibackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","title":"SwiftUIBackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"title":"Backport","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"text":"including types, functions, properties, property wrappers and more.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/wrappedValue":{"title":"wrappedValue","abstract":[{"type":"text","text":"The underlying value referenced by the state object."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackports7Combine16ObservableObjectRzlE7Wrappedxmfp","text":"Wrapped","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/stateobject\/wrappedvalue","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue","type":"topic"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject":{"navigatorTitle":[{"kind":"identifier","text":"StateObject"}],"kind":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject","title":"Backport.StateObject","url":"\/documentation\/swiftuibackports\/backport\/stateobject","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that instantiates an observable object."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateObject"}],"deprecated":true}}}