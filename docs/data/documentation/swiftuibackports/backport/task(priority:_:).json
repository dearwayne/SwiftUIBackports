{"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Adds an asynchronous task to perform when this view appears."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/task(priority:_:)"},"metadata":{"roleHeading":"Instance Method","platforms":[],"symbolKind":"method","title":"task(priority:_:)","extendedModule":"SwiftBackports","role":"symbol","externalID":"s:14SwiftBackports8BackportV0A11UIBackports0A2UI4ViewRzlE4task8priority_QrScP_yyYaYbctF","modules":[{"relatedModules":["SwiftBackports"],"name":"SwiftUIBackports"}],"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"task"},{"kind":"text","text":"("},{"text":"priority","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"task"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"text":" = .userInitiated, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" () "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The task priority to use when creating the asynchronous","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"task. The default priority is "},{"type":"codeVoice","code":".userInitiated"}],"type":"paragraph"}],"name":"priority"},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that SwiftUI calls as an asynchronous task","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when the view appears. SwiftUI automatically cancels the task"},{"type":"text","text":" "},{"type":"text","text":"if the view disappears before the action completes."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A view that runs the specified action asynchronously when"},{"text":" ","type":"text"},{"text":"the view appears.","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this modifier to perform an asynchronous task with a lifetime that","type":"text"},{"type":"text","text":" "},{"text":"matches that of the modified view. If the task doesnâ€™t finish","type":"text"},{"type":"text","text":" "},{"text":"before SwiftUI removes the view or the view changes identity, SwiftUI","type":"text"},{"text":" ","type":"text"},{"text":"cancels the task.","type":"text"}]},{"inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"await"},{"type":"text","text":" keyword inside the task to"},{"text":" ","type":"text"},{"text":"wait for an asynchronous call to complete.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let url = URL(string: \"https:\/\/example.com\")!","@State private var message = \"Loading...\"","","var body: some View {","    Text(message)","        .task {","            do {","                var receivedLines = [String]()","                for try await line in url.lines {","                    receivedLines.append(line)","                    message = \"Received \\(receivedLines.count) lines\"","                }","            } catch {","                message = \"Failed to load\"","            }","        }","}"]},{"inlineContent":[{"text":"When each new line arrives, the body of the ","type":"text"},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"code":"await","type":"codeVoice"},{"text":"-","type":"text"},{"code":"in","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"loop stores the line in an array of strings and updates the content of the"},{"type":"text","text":" "},{"text":"text view to report the latest line count.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/task(priority:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/task(priority:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"text":": ","kind":"text"},{"text":"TaskPriority","preciseIdentifier":"s:ScP","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftuibackports\/backport\/task(priority:_:)","title":"task(priority:_:)","deprecated":true,"role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/task(priority:_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Adds an asynchronous task to perform when this view appears.","type":"text"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"}}}