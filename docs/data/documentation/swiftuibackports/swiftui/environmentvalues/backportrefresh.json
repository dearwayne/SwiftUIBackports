{"abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"sections":[],"metadata":{"modules":[{"relatedModules":["SwiftUI"],"name":"SwiftUIBackports"}],"externalID":"s:7SwiftUI17EnvironmentValuesV0A11UIBackportsE15backportRefresh0A9Backports8BackportVADypRszlE0G6ActionVyyp_GSgvp","extendedModule":"SwiftUI","title":"backportRefresh","platforms":[],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"backportRefresh"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV","text":"Backport"},{"text":"<","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE13RefreshActionV","text":"RefreshAction"},{"kind":"text","text":"?"}],"symbolKind":"property","roleHeading":"Instance Property"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backportRefresh","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14SwiftBackports8BackportV","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","text":"Backport","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"keyword","text":"Any"},{"text":">.","kind":"text"},{"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","kind":"typeIdentifier","text":"RefreshAction","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE13RefreshActionV"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Unlike the official implementation, this backport does not affect any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"view’s like "},{"code":"List","type":"codeVoice"},{"type":"text","text":" to provide automatic pull-to-refresh behaviour."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can use this to offer refresh capability in your custom views."},{"type":"text","text":" "},{"type":"text","text":"Read the "},{"code":"EnvironmentValues\/refresh","type":"codeVoice"},{"type":"text","text":" environment value to get the"},{"text":" ","type":"text"},{"code":"RefreshAction","type":"codeVoice"},{"type":"text","text":" instance for a given "},{"type":"codeVoice","code":"Environment"},{"text":". If you find","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" value, change your view’s appearance or behavior to offer"},{"text":" ","type":"text"},{"text":"the refresh to the user, and call the instance to conduct the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"refresh. You can call the refresh instance directly because it defines"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"code":"RefreshAction\/callAsFunction()","type":"codeVoice"},{"type":"text","text":" method that Swift calls"},{"text":" ","type":"text"},{"type":"text","text":"when you call the instance:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["struct RefreshableView: View {","    @Environment(\\.refresh) private var refresh","","    var body: some View {","        Button(\"Refresh\") {","            Task {","                await refresh?()","            }","        }","        .disabled(refresh == nil)","    }","}"]},{"inlineContent":[{"type":"text","text":"Be sure to call the handler asynchronously by preceding it"},{"text":" ","type":"text"},{"type":"text","text":"with "},{"type":"codeVoice","code":"await"},{"type":"text","text":". Because the call is asynchronous, you can use"},{"type":"text","text":" "},{"text":"its lifetime to indicate progress to the user. For example,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you might reveal an indeterminate "},{"type":"codeVoice","code":"ProgressView"},{"type":"text","text":" before"},{"text":" ","type":"text"},{"text":"calling the handler, and hide it when the handler completes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your code isn’t already in an asynchronous context, create a"},{"text":" ","type":"text"},{"text":"doc:\/\/com.apple.documentation\/documentation\/Swift\/Task","type":"text"},{"type":"text","text":" for the"},{"text":" ","type":"text"},{"text":"method to run in. If you do this, consider adding a way for the","type":"text"},{"text":" ","type":"text"},{"text":"user to cancel the task. For more information, see","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","type":"reference"},{"type":"text","text":" "},{"text":"in ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"The Swift Programming Language"}]},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftuibackports\/swiftui\/environmentvalues\/backportrefresh"]}],"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/EnvironmentValues"]]},"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/EnvironmentValues\/backportRefresh","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/RefreshAction":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"deprecated":true,"title":"Backport.RefreshAction","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"url":"\/documentation\/swiftuibackports\/backport\/refreshaction","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RefreshAction","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RefreshAction"}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","role":"symbol"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/SwiftUI":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUI","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI","abstract":[],"url":"\/documentation\/swiftuibackports\/swiftui"},"https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html":{"title":"Concurrency","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","type":"link","titleInlineContent":[{"type":"text","text":"Concurrency"}]},"doc://SwiftUIBackports/documentation/SwiftUIBackports/SwiftUI/EnvironmentValues":{"role":"symbol","title":"EnvironmentValues","type":"topic","kind":"symbol","navigatorTitle":[{"text":"EnvironmentValues","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnvironmentValues","preciseIdentifier":"s:7SwiftUI17EnvironmentValuesV"}],"abstract":[],"url":"\/documentation\/swiftuibackports\/swiftui\/environmentvalues","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/EnvironmentValues"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"type":"topic","kind":"symbol","role":"collection","title":"SwiftUIBackports","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","abstract":[],"url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/SwiftUI/EnvironmentValues/backportRefresh":{"abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"url":"\/documentation\/swiftuibackports\/swiftui\/environmentvalues\/backportrefresh","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/SwiftUI\/EnvironmentValues\/backportRefresh","title":"backportRefresh","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"backportRefresh","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV","text":"Backport"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"text":">.","kind":"text"},{"text":"RefreshAction","kind":"typeIdentifier","preciseIdentifier":"s:14SwiftBackports8BackportV0A11UIBackportsypRszlE13RefreshActionV"},{"kind":"text","text":"?"}],"deprecated":true},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"navigatorTitle":[{"text":"Backport","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftuibackports\/backport","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"text":" ","type":"text"},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"kind":"symbol","title":"Backport","identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"}}}